// NOTE: This file was generated by the ServiceGenerator.

// ----------------------------------------------------------------------------
// API:
//   Google Tracing API (tracing/v1)
// Description:
//   Send and retrieve trace data from Google Stackdriver Trace.
// Documentation:
//   https://cloud.google.com/trace

#import "GTLRTracingQuery.h"

#import "GTLRTracingObjects.h"

@implementation GTLRTracingQuery

@dynamic fields;

@end

@implementation GTLRTracingQuery_ProjectsTracesBatchUpdate

@dynamic parent;

+ (instancetype)queryWithObject:(GTLRTracing_BatchUpdateSpansRequest *)object
                         parent:(NSString *)parent {
  if (object == nil) {
    GTLR_DEBUG_ASSERT(object != nil, @"Got a nil object");
    return nil;
  }
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/traces:batchUpdate";
  GTLRTracingQuery_ProjectsTracesBatchUpdate *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:@"POST"
                       pathParameterNames:pathParams];
  query.bodyObject = object;
  query.parent = parent;
  query.expectedObjectClass = [GTLRTracing_Empty class];
  query.loggingName = @"tracing.projects.traces.batchUpdate";
  return query;
}

@end

@implementation GTLRTracingQuery_ProjectsTracesGet

@dynamic name;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}";
  GTLRTracingQuery_ProjectsTracesGet *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRTracing_Trace class];
  query.loggingName = @"tracing.projects.traces.get";
  return query;
}

@end

@implementation GTLRTracingQuery_ProjectsTracesList

@dynamic endTime, filter, orderBy, pageSize, pageToken, parent, startTime;

+ (instancetype)queryWithParent:(NSString *)parent {
  NSArray *pathParams = @[ @"parent" ];
  NSString *pathURITemplate = @"v1/{+parent}/traces";
  GTLRTracingQuery_ProjectsTracesList *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.parent = parent;
  query.expectedObjectClass = [GTLRTracing_ListTracesResponse class];
  query.loggingName = @"tracing.projects.traces.list";
  return query;
}

@end

@implementation GTLRTracingQuery_ProjectsTracesListSpans

@dynamic name, pageToken;

+ (instancetype)queryWithName:(NSString *)name {
  NSArray *pathParams = @[ @"name" ];
  NSString *pathURITemplate = @"v1/{+name}:listSpans";
  GTLRTracingQuery_ProjectsTracesListSpans *query =
    [[self alloc] initWithPathURITemplate:pathURITemplate
                               HTTPMethod:nil
                       pathParameterNames:pathParams];
  query.name = name;
  query.expectedObjectClass = [GTLRTracing_ListSpansResponse class];
  query.loggingName = @"tracing.projects.traces.listSpans";
  return query;
}

@end
